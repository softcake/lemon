/*
 * Copyright 2017 softcake.org.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "idea"

sourceSets {
    integTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integTest/java')

            integTest.runtimeClasspath += integTest.output
        }
        resources.srcDir file('src/integTest/resources')

    }
}

dependencies {
    integTestCompile sourceSets.main.output
    integTestCompile sourceSets.test.output
    integTestCompile configurations.testCompile
    integTestRuntime configurations.testRuntime
    integTestCompile test_libraries.junitVintage
    integTestRuntime 'org.junit.platform:junit-platform-console:1.0.3'

}

configurations {
    integTestImplementation.extendsFrom testImplementation
    integTestRuntimeOnly.extendsFrom testRuntimeOnly

}

idea {
    module {
        /*testSourceDirs += sourceSets.integTest.java.srcDirs
        testSourceDirs += sourceSets.integTest.resources.srcDirs
        scopes.TEST.plus.add(configurations.integTestCompile)
        scopes.TEST.plus.add(configurations.integTestRuntime)*/
        testSourceDirs += file('src/integTest/java')
        scopes.TEST.plus += [configurations.integTestRuntimeClasspath, configurations.integTestCompileClasspath]

    }
}
/*task integ2Test(type: junitPlatformTest) {
    jacoco {
        destinationFile = file("$buildDir/jacoco/intectest.exec")
    }
}*/


task integTest(type: JavaExec) {
    group = "verification"
    dependsOn integTestClasses
    //mustRunAfter junitPlatformTest
    jvmArgs '-ea'

    classpath = project.sourceSets.integTest.runtimeClasspath
    main 'org.junit.platform.console.ConsoleLauncher'
    args '--scan-class-path'
    args "--reports-dir=$buildDir/test-results/jupiter-results"






    /*testClassesDirs += sourceSets.integTest.output.classesDirs
    classpath = sourceSets.integTest.runtimeClasspath
    outputs.upToDateWhen { false }
    dependsOn testClasses
    mustRunAfter junitPlatformTest*/

}


check.dependsOn(integTest)
rootProject.tasks["sonarqube"].dependsOn check
